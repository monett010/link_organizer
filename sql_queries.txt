- Get all bookmarks
SELECT * FROM Bookmarks;

- Get all(unarchived) bookmarks
SELECT * FROM Bookmarks WHERE archived='N';


- Get archived bookmarks
SELECT * FROM Bookmarks WHERE archived='Y';


- Get all tags
SELECT * FROM Tags;

- Add bookmark
INSERT INTO Bookmarks ('bookmark_title','bookmark_url','date_added') VALUES ('','','');

- Add tag to bookmark
INSERT INTO Bookmark_tags (boookmark_id, tag_id) VALUES ('','');

- Add tag
INSERT INTO Tags ('tag_name') VALUES ('rip private equity');

- Remove bookmark
DELETE FROM Bookmarks WHERE bookmark_id = ?;

- Remove tag from bookmark
DELETE FROM Bookmark_tags WHERE tag_id = ? AND bookmark_id = ?;

- Remove tag
DELETE FROM Tags WHERE tag_id = ?;


- Get bookmarks from tag
SELECT bookmark_id FROM Bookmark_tags WHERE tag_id = ?;


[[SELECT Bookmarks.bookmark_url AS url, Bookmarks.bookmark_title AS title, Bookmarks.bookmark_id AS bookmark_id
FROM Bookmark_tags
INNER JOIN Bookmarks ON Bookmarks.bookmark_id = Bookmark_tags.bookmark_id
AND Bookmark_tags.tag_id = 1;]]

SELECT Bookmarks.bookmark_url AS url, Bookmarks.bookmark_title AS title, Bookmarks.bookmark_id AS bookmark_id
FROM Bookmark_tags
INNER JOIN Bookmarks ON Bookmarks.bookmark_id = Bookmark_tags.bookmark_id
AND Bookmark_tags.tag_id = 1 AND Bookmarks.archived='N';

SELECT Bookmarks.bookmark_url AS url, Bookmarks.bookmark_title AS title, Bookmarks.bookmark_id AS bookmark_id
FROM Bookmark_tags
INNER JOIN Bookmarks ON Bookmarks.bookmark_id = Bookmark_tags.bookmark_id
AND Bookmark_tags.tag_id = 1 AND Bookmarks.archived='Y';

- add a thing to optionally get multiple bookmark ids on getBookmark

- Search bookmarks by title


- Export links

- Get tags for a bookmark
SELECT Bookmark_tags.tag_id AS tag_id, Tags.tag_name as tag_name 
FROM Bookmark_tags
INNER JOIN Tags ON Bookmark_tags.tag_id = Tags.tag_id
WHERE bookmark_id = ?;

- Archive bookmark
UPDATE Bookmarks
SET archived = 'Y'
WHERE bookmark_id = ?;

====
API

RETRIEVE
/bookmarks/[id] - gets one bookmark by id
/get/bookmarks - gets all bookmarks
/get/bookmarks/[status=archived] - gets archived bookmarks
/get/bookmarks/[status=unarchived] - gets unarchived bookmarks
/tags - gets all tags
/tags/[id] - gets one tag by id


ADD
/bookmarks/ - adds a bookmark
/tags/tagname="tag_name" - adds a tag


UPDATE
/bookmark/action="archive" - archives a bookmark
/bookmark/action="unarchive" - unarchives a bookmark
/tags/[bookmark_id] - adds a tag to a bookmark


DELETE
/bookmarks/[id]
/tags/[tag_id]
